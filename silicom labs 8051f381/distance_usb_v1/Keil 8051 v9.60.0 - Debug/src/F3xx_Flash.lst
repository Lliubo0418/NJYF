C51 COMPILER V9.60.0.0   F3XX_FLASH                                                        06/12/2024 09:09:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE F3XX_FLASH
OBJECT MODULE PLACED IN .\src\F3xx_Flash.OBJ
COMPILER INVOKED BY: F:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\52876\S
                    -implicityStudio\v5_workspace\distance_usb_v1\src\F3xx_Flash.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) F
                    -LOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\52876\SimplicityStudio\v5_wo
                    -rkspace\distance_usb_v1\external_copied_files;F:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.1//Device/shar
                    -ed/si8051Base;F:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.1//Device/C8051F380/inc) PRINT(.\src\F3xx_Flas
                    -h.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\F3xx_Flash.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F3xx_Flash.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // Flash utilities for writing/erasing flash pages
  10          //
  11          //
  12          // How To Test:    See Readme.txt
  13          //
  14          //
  15          // Target:         C8051F320/1,
  16          //                 C8051F326/7,
  17          //                 C8051F34x,
  18          //                 C8051F38x
  19          //
  20          // Tool chain:     Keil C51 7.50 / Keil EVAL C51
  21          //                 Silicon Laboratories IDE version 2.6
  22          // Command Line:   See Readme.txt
  23          // Project Name:   USB0_Bulk
  24          //
  25          // Release 2.0
  26          //    -Rewrite (CM)
  27          //    -02 NOV 2012
  28          //
  29          
  30          //-----------------------------------------------------------------------------
  31          // Includes
  32          //-----------------------------------------------------------------------------
  33          
  34          #include "c8051f3xx.h"
  35          #include "F3xx_Flash.h"
  36          
  37          
  38          #include "C8051F380_defs.h"
  39          #include "SI_C8051F380_Defs.h"
  40          //-----------------------------------------------------------------------------
  41          // Static Global Variables
  42          //-----------------------------------------------------------------------------
  43          
  44          static uint8_t FlashKey[2];
  45          
  46          //-----------------------------------------------------------------------------
  47          // Global Functions
  48          //-----------------------------------------------------------------------------
  49          
  50          //-----------------------------------------------------------------------------
  51          // SetFlashKey
C51 COMPILER V9.60.0.0   F3XX_FLASH                                                        06/12/2024 09:09:33 PAGE 2   

  52          //-----------------------------------------------------------------------------
  53          //
  54          // Return Value : None
  55          // Parameters   :
  56          //                1) uint8_t key[2] : Sets the flash key code used to write/erase
  57          //                               flash
  58          //
  59          // Sets the flash key code for flash writes/erases. The MCU will be more
  60          // resistant to flash corruption if the key codes are not stored on chip.
  61          // For example, the flash key can be set from a USB packet prior to programming
  62          // and then cleared once finished to ensure that the flash key is not available.
  63          //
  64          // Enable flash writes:  key[2] = { 0xA5, 0xF1 }
  65          // Disable flash writes: key[2] = { 0x00, 0x00 }
  66          //
  67          //-----------------------------------------------------------------------------
  68          void SetFlashKey(uint8_t key[2])
  69          {
  70   1         FlashKey[0] = key[0];
  71   1         FlashKey[1] = key[1];
  72   1      }
  73          
  74          //-----------------------------------------------------------------------------
  75          // EraseFlashPage
  76          //-----------------------------------------------------------------------------
  77          //
  78          // Return Value : None
  79          // Parameters   :
  80          //                1) uint16_t pageAddress : the address of the flash page to erase
  81          //
  82          // Erases the specified flash page
  83          //
  84          //-----------------------------------------------------------------------------
  85          void EraseFlashPage(uint16_t pageAddress)
  86          {
  87   1         uint8_t EA_Save = IE_EA;
  88   1         SI_VARIABLE_SEGMENT_POINTER(pAddr, uint8_t, SI_SEG_XDATA) = (uint8_t SI_SEG_XDATA *) pageAddress;
  89   1      
  90   1         // Disable interrupts
  91   1         IE_EA = 0;
  92   1      
  93   1         // Write flash key codes
  94   1         FLKEY = FlashKey[0];
  95   1         FLKEY = FlashKey[1];
  96   1      
  97   1         // Enable program erase
  98   1         PSCTL = 0x03;
  99   1      
 100   1         // Erase page by writing to a byte within the page
 101   1         *pAddr = 0x00;
 102   1      
 103   1         // Disable program erase
 104   1         PSCTL = 0x00;
 105   1      
 106   1         // Restore interrupts
 107   1         IE_EA = EA_Save;
 108   1      }
 109          
 110          //-----------------------------------------------------------------------------
 111          // WriteFlashPage
 112          //-----------------------------------------------------------------------------
 113          //
 114          // Return Value : None
C51 COMPILER V9.60.0.0   F3XX_FLASH                                                        06/12/2024 09:09:33 PAGE 3   

 115          // Parameters   :
 116          //                1) uint16_t address : the address of the flash page to write
 117          //                2) uint8_t buffer[] : a buffer to write to the flash page starting
 118          //                                 at the specified page address
 119          //                3) uint16_t size : the number of bytes in the buffer to write
 120          //
 121          // Write the specified number of bytes in the buffer to the specified address.
 122          //
 123          //-----------------------------------------------------------------------------
 124          void WriteFlashPage(uint16_t address, uint8_t * buffer, uint16_t size)
 125          {
 126   1         uint8_t EA_Save = IE_EA;
 127   1         SI_VARIABLE_SEGMENT_POINTER(pAddr, uint8_t, SI_SEG_XDATA) = (uint8_t SI_SEG_XDATA *) address;
 128   1         uint16_t i;
 129   1      
 130   1         // Disable interrupts
 131   1         IE_EA = 0;
 132   1      
 133   1         // Enable program writes
 134   1         PSCTL = 0x01;
 135   1      
 136   1      #if FLASH_GROUP_WRITE_EN
 137   1         // Enable two-byte flash writes
 138   1         PFE0CN |= 0x01;
 139   1      #endif // FLASH_GROUP_WRITE_EN
 140   1      
 141   1         for (i = 0; i < size; i++)
 142   1         {
 143   2            // Write flash key codes
 144   2            FLKEY = FlashKey[0];
 145   2            FLKEY = FlashKey[1];
 146   2      
 147   2            // Write a single byte to the page
 148   2            pAddr[i] = buffer[i];
 149   2         }
 150   1      
 151   1         // Disable program writes
 152   1         PSCTL = 0x00;
 153   1      
 154   1         // Restore interrupts
 155   1         IE_EA = EA_Save;
 156   1      }
 157          
 158          //-----------------------------------------------------------------------------
 159          // ReadFlashPage
 160          //-----------------------------------------------------------------------------
 161          //
 162          // Return Value : None
 163          // Parameters   :
 164          //                1) uint16_t address : the address of the flash page to read
 165          //                2) uint8_t buffer[] : a buffer to read from the flash page starting
 166          //                                 at the specified page address
 167          //                3) uint16_t size : the number of bytes to read into the buffer
 168          //
 169          // Read the specified number of bytes from flash and store in the buffer.
 170          //
 171          //-----------------------------------------------------------------------------
 172          void ReadFlashPage(uint16_t address, uint8_t * buffer, uint16_t size)
 173          {
 174   1         SI_VARIABLE_SEGMENT_POINTER(pAddr, uint8_t, SI_SEG_CODE) = (uint8_t SI_SEG_CODE *) address;
 175   1         uint16_t i;
 176   1      
 177   1         for (i = 0; i < size; i++)
C51 COMPILER V9.60.0.0   F3XX_FLASH                                                        06/12/2024 09:09:33 PAGE 4   

 178   1         {
 179   2            buffer[i] = pAddr[i];
 180   2         }
 181   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
