C51 COMPILER V9.60.0.0   F3XX_USB0_VENDOR_REQUESTS                                         06/12/2024 09:09:33 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE F3XX_USB0_VENDOR_REQUESTS
OBJECT MODULE PLACED IN .\src\F3xx_USB0_Vendor_Requests.OBJ
COMPILER INVOKED BY: F:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\52876\S
                    -implicityStudio\v5_workspace\distance_usb_v1\src\F3xx_USB0_Vendor_Requests.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WA
                    -RNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\52876\Simplic
                    -ityStudio\v5_workspace\distance_usb_v1\external_copied_files;F:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3
                    -.1//Device/shared/si8051Base;F:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.3.1//Device/C8051F380/inc) PRINT(
                    -.\src\F3xx_USB0_Vendor_Requests.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\F3xx_USB0_Vendor_Requests.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // F3xx_USB0_Vendor_Requests.c
   3          //-----------------------------------------------------------------------------
   4          // Copyright 2014 Silicon Laboratories, Inc.
   5          // http://developer.silabs.com/legal/version/v11/Silicon_Labs_Software_License_Agreement.txt
   6          //
   7          // Program Description:
   8          //
   9          // Handle vendor specific control requests.
  10          //
  11          //
  12          // How To Test:    See Readme.txt
  13          //
  14          //
  15          // Target:         C8051F320/1,
  16          //                 C8051F326/7,
  17          //                 C8051F34x,
  18          //                 C8051F38x
  19          //
  20          // Tool chain:     Keil C51 7.50 / Keil EVAL C51
  21          //                 Silicon Laboratories IDE version 2.6
  22          // Command Line:   See Readme.txt
  23          // Project Name:   USB0_Bulk
  24          //
  25          // Release 2.0
  26          //    -Rewrite (CM)
  27          //    -02 NOV 2012
  28          //
  29          
  30          //-----------------------------------------------------------------------------
  31          // Header Files
  32          //-----------------------------------------------------------------------------
  33          
  34          #include "c8051f3xx.h"
  35          #include "F3xx_USB0_Register.h"
  36          #include "F3xx_USB0_Descriptor.h"
  37          #include "F3xx_USB0_InterruptServiceRoutine.h"
  38          #include "F3xx_USB0_Vendor_Requests.h"
  39          #include "F3xx_USB0_Main.h"
  40          #include "F3xx_USB0_Bulk.h"
  41          
  42          
  43          #include "C8051F380_defs.h"
  44          #include "SI_C8051F380_Defs.h"
  45          //-----------------------------------------------------------------------------
  46          // Global Functions
  47          //-----------------------------------------------------------------------------
  48          
  49          //-----------------------------------------------------------------------------
  50          // Handle_Vendor
  51          //-----------------------------------------------------------------------------
C51 COMPILER V9.60.0.0   F3XX_USB0_VENDOR_REQUESTS                                         06/12/2024 09:09:33 PAGE 2   

  52          //
  53          // Return Value : None
  54          // Parameters   : None
  55          //
  56          // Handle vendor-specific control requests
  57          // - Decode Incoming Setup requests
  58          // - Load data packets on fifo while in transmit mode
  59          //
  60          //-----------------------------------------------------------------------------
  61          void Handle_Vendor ()
  62          {
  63   1         switch (Setup.bRequest)
  64   1         {
  65   2            case REQ_RST_STATE:
  66   2               Reset_State ();
  67   2               break;
  68   2            default:
  69   2               Force_Stall ();      // Send stall to host if invalid request
  70   2               break;
  71   2         }
  72   1      }
  73          
  74          //-----------------------------------------------------------------------------
  75          // Reset_State
  76          //-----------------------------------------------------------------------------
  77          //
  78          // Return Value : None
  79          // Parameters   : None
  80          //
  81          // Reset device state machine to idle. Optionally unlock the flash write/erase
  82          // interface by resetting the device.
  83          //
  84          //-----------------------------------------------------------------------------
  85          void Reset_State ()
  86          {
  87   1         uint8_t reset = 0;
  88   1      
  89   1         // Send procedural stall if device isn't configured
  90   1         // Or request is made to host(remote wakeup not supported)
  91   1         // Or request is made to interface
  92   1         // Or msbs of value or index set to non-zero value
  93   1         // Or data length set to non-zero.
  94   1         if ((USB0_State != DEV_CONFIGURED) ||
  95   1             (Setup.bmRequestType != (DIR_OUT | REQ_TYPE_VENDOR | RECP_DEVICE)) ||
  96   1             (Setup.wIndex.u16 != 0) ||
  97   1             (Setup.wLength.u16 != 0) ||
  98   1             (Setup.wValue.u16 > 1))
  99   1         {
 100   2            Force_Stall ();
 101   2         }
 102   1         else
 103   1         {
 104   2            // Signal the foreground to transition to the IDLE state
 105   2            AsyncResetState = 1;
 106   2      
 107   2            // Flash write/erase interface is locked
 108   2            if (Setup.wValue.u16 == VALUE_UNLOCK && FLKEY == 0x03)
 109   2            {
 110   3               reset = 1;
 111   3            }
 112   2         }
 113   1      
 114   1         // Reset Index to 0
C51 COMPILER V9.60.0.0   F3XX_USB0_VENDOR_REQUESTS                                         06/12/2024 09:09:33 PAGE 3   

 115   1         POLL_WRITE_BYTE (INDEX, 0);
 116   1      
 117   1         if (EP_Status[0] != EP_STALL)
 118   1         {
 119   2            // Set Serviced Out packet ready and
 120   2            // data end to indicate transaction
 121   2            // is over
 122   2            POLL_WRITE_BYTE (E0CSR, (rbSOPRDY | rbDATAEND));
 123   2         }
 124   1      
 125   1         if (reset)
 126   1         {
 127   2            // Wait to allow the control transfer
 128   2            // to finish before resetting the device
 129   2            Delay ();
 130   2      
 131   2            // Perform software reset
 132   2            RSTSRC |= 0x10;
 133   2         }
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    115    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
